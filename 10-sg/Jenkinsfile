pipeline {
    agent {
       label 'AGENT-1'
    }
    environment {
        appVersion = '' 
        REGION  =  "us-east-1" 
        ACC_ID  = "888947293288" 
        PROJECT = "roboshop"
    }
    options {
        timeout(time: 30, unit: 'MINUTES')
        disableConcurrentBuilds() 
        ansiColor('xterm') 
    }
    /* parameters {
        string(name: 'PERSON', defaultValue: 'Mr Jenkins', description: 'Who should I say hello to?')
        text(name: 'BIOGRAPHY', defaultValue: '', description: 'Enter some information about the person')
        booleanParam(name: 'TOGGLE', defaultValue: true, description: 'Toggle this value')
        choice(name: 'CHOICE', choices: ['One', 'Two', 'Three'], description: 'Pick something')
        password(name: 'PASSWORD', defaultValue: 'SECRET', description: 'Enter a password') 
    } */
    // Build
    stages {
        stage('init') {
            steps {
                script {
                    withAWS(credentials: 'aws-creds', region: 'us-east-1') {
                        sh """
                            cd 10-sg
                            terraform init -reconfigure
                        """
                    }
                }
            }
        }

        stage('plan') {
            steps {
                script {
                    withAWS(credentials: 'aws-creds', region: 'us-east-1') {
                        sh """
                            cd 10-sg
                            terraform plan
                        """
                    }
                }
            }
        }
        stage('apply') {
            steps {
                script {
                    withAWS(credentials: 'aws-creds', region: 'us-east-1') {
                        sh """
                            cd 10-sg
                            terraform apply -auto-approve
                        """
                    }
                }
            }
        }
        stage('Bastion EKS ACM ALB'){
            parallel {
                stage('Trigger Bastion') {
                    steps {
                        script {
                            build job: '20-bastion'
                              propagate: false // even sg fails vpc will not effected 
                              wait: false // vpc will not wait for sg pipeline completion 
                        }
                    }
                }
                 stage('Trigger EKS') {
                    steps {
                        script {
                            build job: '80-eks'
                              propagate: false // even sg fails vpc will not effected 
                              wait: false // vpc will not wait for sg pipeline completion 
                        }
                    }
                }
                 stage('Trigger ACM') {
                    steps {
                        script {
                            build job: '60-acm'
                              propagate: false // even sg fails vpc will not effected 
                              wait: false // vpc will not wait for sg pipeline completion 
                        }
                    }
                }
            }
        }
        stage('Trigger ALB') {
            steps {
                script {
                  build job: '70-frontend-alb'
                  propagate: false // even sg fails vpc will not effected 
                  wait: false // vpc will not wait for sg pipeline completion 
                }
            }
        }
                 
        
    }

    post { 
        always { 
            echo 'I will always say Hello again!'
            deleteDir()
        }
        success { 
            echo 'Hello Success'
        }
        failure { 
            echo 'Hello Failure'
        }
    }
}